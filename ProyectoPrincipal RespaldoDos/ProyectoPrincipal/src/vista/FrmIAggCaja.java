
package vista;

import abm.abmCaja;
import config.sesion;
import java.sql.Date;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.time.LocalDate;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import modelo.modeloCaja;

public class FrmIAggCaja extends javax.swing.JInternalFrame {
    
    FrmCaja ofrmCaja;
    abmCaja oAbmCaja;
    modeloCaja oModeloCaja;
    String opcion;
    sesion Osesion = new sesion();
    FrmInternosFondo oFondo;
    public FrmIAggCaja() {
        initComponents();
    }
    
    public FrmIAggCaja(String operacion,modeloCaja oCaja,FrmCaja pFrmCaja,sesion psesion,FrmInternosFondo pfondo) {
        
        initComponents();
        txtIdCaja.requestFocus();
        initComponents() ;
        opcion = operacion;
        ofrmCaja = pFrmCaja;
        Osesion =  psesion;
        oAbmCaja = new abmCaja(Osesion);
        oFondo = pfondo;
        txtFecha.setEditable(false);
        txtEstado.setEditable(false);
        if(opcion.equals("GUARDAR"))
        {
            btnAgregar.setText(opcion);
            txtFecha.setText(LocalDate.now().toString());
            txtEstado.setText("Activo");
            
        }
        else
        {
            btnAgregar.setText(opcion);
            //txtIdUsuario.setText(oCaja.getFk_usuario()+"");
            txtIdCaja.setText(oCaja.getId_caja()+"");
            txtTotal.setText(oCaja.getTotal() + "");
            txtEfectivo.setText(oCaja.getEfectivo() + "");
            txtTarjeta.setText(oCaja.getTarjeta() + "");
            txtFecha.setText(oCaja.getFecha() + "");
            txtFecha.setEditable(false);
            txtEstado.setText("Activo");
            
            
//            txtStock.setText(oproducto.getStock()+"");
//            txtCodigo.setText(oproducto.getId_producto()+"");
        }

        
    }
    
        

   
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnAgregar = new javax.swing.JButton();
        txtTarjeta = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        txtFecha = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        txtEstado = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtEfectivo = new javax.swing.JTextField();
        txtIdCaja = new javax.swing.JTextField();
        txtTotal = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        btnAtras = new javax.swing.JButton();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);

        btnAgregar.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnAgregar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagen/Agregar.png"))); // NOI18N
        btnAgregar.setText("AGREGAR");
        btnAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarActionPerformed(evt);
            }
        });

        txtTarjeta.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtTarjetaKeyPressed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel7.setText("FECHA");

        txtFecha.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtFechaActionPerformed(evt);
            }
        });
        txtFecha.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtFechaKeyPressed(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel8.setText("ESTADO");

        txtEstado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtEstadoActionPerformed(evt);
            }
        });
        txtEstado.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtEstadoKeyPressed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel6.setText("TARJETA");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel2.setText("EFECTIVO");

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel3.setText("NÂ° CAJA");

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel4.setText("TOTAL");

        txtEfectivo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtEfectivoActionPerformed(evt);
            }
        });
        txtEfectivo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtEfectivoKeyPressed(evt);
            }
        });

        txtIdCaja.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtIdCajaActionPerformed(evt);
            }
        });
        txtIdCaja.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtIdCajaKeyPressed(evt);
            }
        });

        txtTotal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTotalActionPerformed(evt);
            }
        });
        txtTotal.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtTotalKeyPressed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Trebuchet MS", 1, 36)); // NOI18N
        jLabel5.setText("REGISTRO CAJA");

        btnAtras.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnAtras.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagen/flecha-hacia-atras.png"))); // NOI18N
        btnAtras.setText("ATRAS");
        btnAtras.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAtrasActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel4)
                                .addComponent(jLabel3))
                            .addComponent(jLabel6)
                            .addComponent(jLabel7)
                            .addComponent(jLabel8))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(txtIdCaja, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtEfectivo, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 209, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtTarjeta, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtFecha, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtEstado, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 209, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(59, 59, 59)
                        .addComponent(jLabel5))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(60, 60, 60)
                        .addComponent(btnAgregar, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(26, 26, 26)
                        .addComponent(btnAtras, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(78, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel5)
                .addGap(34, 34, 34)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtIdCaja, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtTotal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtEfectivo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtTarjeta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(txtFecha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(txtEstado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(11, 11, 11)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAgregar)
                    .addComponent(btnAtras))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtTotalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTotalActionPerformed
       
    }//GEN-LAST:event_txtTotalActionPerformed

    private void btnAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarActionPerformed
        try {
            realizarOperacion();
        } catch (ParseException ex) {
            Logger.getLogger(FrmIAggCaja.class.getName()).log(Level.SEVERE, null, ex);
        }
        ofrmCaja.actualizarTabla();
    }//GEN-LAST:event_btnAgregarActionPerformed

    private void txtIdCajaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtIdCajaActionPerformed
        
    }//GEN-LAST:event_txtIdCajaActionPerformed

    private void txtEfectivoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtEfectivoActionPerformed
        
    }//GEN-LAST:event_txtEfectivoActionPerformed

    private void txtFechaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtFechaActionPerformed
        
    }//GEN-LAST:event_txtFechaActionPerformed

    private void txtEstadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtEstadoActionPerformed
        
    }//GEN-LAST:event_txtEstadoActionPerformed

    private void txtIdCajaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtIdCajaKeyPressed
        if(Osesion.verificarEnter(evt) == true)
        {
            txtTotal.requestFocus();
        }
    }//GEN-LAST:event_txtIdCajaKeyPressed

    private void txtTotalKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTotalKeyPressed
        if(Osesion.verificarEnter(evt) == true)
        {
            txtEfectivo.requestFocus();
        }
    }//GEN-LAST:event_txtTotalKeyPressed

    private void txtEfectivoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtEfectivoKeyPressed
        // TODO add your handling code here:
        if(Osesion.verificarEnter(evt) == true)
        {
            txtTarjeta.requestFocus();
        }
    }//GEN-LAST:event_txtEfectivoKeyPressed

    private void txtTarjetaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTarjetaKeyPressed
        if(Osesion.verificarEnter(evt) == true)
        {
            txtFecha.requestFocus();
        }
    }//GEN-LAST:event_txtTarjetaKeyPressed

    private void txtEstadoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtEstadoKeyPressed
        if(Osesion.verificarEnter(evt) == true)
        {
            try {
                realizarOperacion();
            } catch (ParseException ex) {
                Logger.getLogger(FrmIAggCaja.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_txtEstadoKeyPressed

    private void txtFechaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtFechaKeyPressed
        if(Osesion.verificarEnter(evt) == true)
        {
            txtEstado.requestFocus();
        }
    }//GEN-LAST:event_txtFechaKeyPressed

    private void btnAtrasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAtrasActionPerformed
        this.dispose();
        oFondo.setVisible(false);
        ofrmCaja.setVisible(true);
    }//GEN-LAST:event_btnAtrasActionPerformed

    
     public void realizarOperacion() throws ParseException
    {
        if(verificarCampos() && verificarNumero(txtEfectivo.getText()) && verificarNumero(txtTarjeta.getText()) && verificarNumero(txtTotal.getText()))
        {
            oModeloCaja = new modeloCaja();
        if (opcion.equals("GUARDAR"))
        {
            oModeloCaja.setTotal(Float.parseFloat(txtTotal.getText()));
            oModeloCaja.setTarjeta(Float.parseFloat(txtTarjeta.getText()));
           
            oModeloCaja.setEstado(true);
            oModeloCaja.setFecha(new java.sql.Date(new SimpleDateFormat("dd-MM-yyyy").parse(txtFecha.getText()).getTime()));

            oModeloCaja.setId_caja(Integer.parseInt(txtIdCaja.getText()));
            oModeloCaja.setFk_usuario(Osesion.getIdUsuario());
            boolean resultado = oAbmCaja.agregarCaja(oModeloCaja);
            if (resultado)
            {
                JOptionPane.showMessageDialog(null, "Caja Agregada Correctamente");
                this.dispose();
                ofrmCaja.actualizarTabla();
                oFondo.setVisible(false);
                ofrmCaja.setVisible(true);
            }else
            {
                JOptionPane.showMessageDialog(null, "Error al Guardar Caja");
                
            }
            
        }else
        {
            oModeloCaja.setTotal(Float.parseFloat(txtTotal.getText()));
            oModeloCaja.setEstado((true));
            oModeloCaja.setId_caja(Integer.parseInt(txtIdCaja.getText()));
            oModeloCaja.setFecha(new java.sql.Date(new SimpleDateFormat("dd-MM-yyyy").parse(txtFecha.getText()).getTime()));
            oModeloCaja.setEfectivo(Float.parseFloat(txtEfectivo.getText()));
            oModeloCaja.setTarjeta(Float.parseFloat(txtTarjeta.getText()));
            boolean resultado = oAbmCaja.modificarCaja(oModeloCaja);
            
            
            if (resultado)
            {
                JOptionPane.showMessageDialog(null, "Caja Modificado Correctamente");
                this.dispose();
                ofrmCaja.actualizarTabla();
                oFondo.setVisible(false);
                ofrmCaja.setVisible(true);
            }else
            {
                JOptionPane.showMessageDialog(null, "Error al Modificar Caja");
            }
        }
        }
        else
        {
            JOptionPane.showMessageDialog(null,"Todos los campos deben ser rellenados correctamente");
        }
    }
     
     public boolean verificarNumero(String precio)
    {
        try
        {
            double precioConvertido = Double.parseDouble(precio);
            if(precioConvertido < 0)
            {
                JOptionPane.showMessageDialog(null, "Solo se permiten valores Positivos");
                return false;
            }else
            {
                return true;
            }
        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(null,"Solo se permiten valores numericos");
            return false;
        }
        
    }
     
     public boolean verificarCampos() {
    ArrayList<String> campos = new ArrayList<>();
    campos.add(txtEfectivo.getText());
    campos.add(txtTarjeta.getText());
    campos.add(txtTotal.getText());

    for (String campo : campos) {
        if (campo == null || campo.trim().isEmpty()) {
            return false; // Si hay al menos uno vacÃ­o, detenemos y devolvemos false
        }
    }
    return true;
     }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAgregar;
    private javax.swing.JButton btnAtras;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JTextField txtEfectivo;
    private javax.swing.JTextField txtEstado;
    private javax.swing.JTextField txtFecha;
    private javax.swing.JTextField txtIdCaja;
    private javax.swing.JTextField txtTarjeta;
    private javax.swing.JTextField txtTotal;
    // End of variables declaration//GEN-END:variables
}
